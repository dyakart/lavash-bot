# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –æ–±—â–µ–Ω–∏—é –±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –ª–∏—á–∫–µ

from aiogram import F, types, Router
from aiogram.enums import ParseMode
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
from aiogram.filters import CommandStart, Command, or_f
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
from aiogram.utils.formatting import as_list, as_marked_section, Bold
# –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Å—Å–∏—è–º–∏
from sqlalchemy.ext.asyncio import AsyncSession

# –Ω–∞—à–∏ –∏–º–ø–æ—Ä—Ç—ã
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∏—á–∫–∞, –≥—Ä—É–ø–ø–∞, —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞
from filters.chat_types import ChatTypeFilter
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from kbds.reply import get_keyboard
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from kbds.inline import get_callback_btns
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ë–î
from database.orm_query import orm_get_products

# —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –ª–∏—á–∫–∏
user_private_router = Router()
# –ø–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –≥–¥–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ä–æ—É—Ç–µ—Ä (–≤ –ª–∏—á–∫–µ, –≤ –≥—Ä—É–ø–ø–µ, —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ)
user_private_router.message.filter(ChatTypeFilter(['private']))


# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∫–∞—Ñ–µ ¬´La-–í–∞—à¬ª',
                         reply_markup=get_keyboard(
                             '–ú–µ–Ω—é:',
                             '–û –Ω–∞—Å:',
                             '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:',
                             '–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏:',
                             placeholder='–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
                             sizes=(2, 2)
                         ),
                         )


# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /menu
# –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ Command
# @user_private_router.message(F.text.lower() == '–º–µ–Ω—é')
@user_private_router.message(or_f(Command('menu'), (F.text.lower() == '–º–µ–Ω—é')))
async def menu_cmd(message: types.Message, session: AsyncSession):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    products = await orm_get_products(session)
    if not products:
        await message.answer("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç üö´")
        return
    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç, –≤—ã–≤–æ–¥–∏–º —Ç–æ–≤–∞—Ä—ã
    for product in products:
        await message.answer_photo(
            product.image,
            caption=f"<strong>{product.name}\
                    </strong>\n{product.description}\n–í–µ—Å: {product.weight} –≥—Ä.\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {round(product.price, 2)} ‚ÇΩ",
            reply_markup=get_callback_btns(btns={
                # —Ç–µ–∫—Å—Ç: –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–¥–∞—Ç—å —Å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π
                '–£–¥–∞–ª–∏—Ç—å': f'delete_{product.id}',
                '–ò–∑–º–µ–Ω–∏—Ç—å': f'change_{product.id}'
            })
        )
    await message.answer("‚ù§Ô∏è –û–ö, –≤–æ—Ç –º–µ–Ω—é ‚è´")


# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /about
@user_private_router.message(F.text.lower() == '–æ –Ω–∞—Å')
@user_private_router.message(Command('about'))
async def menu_cmd(message: types.Message):
    await message.answer("–û –Ω–∞—Å:")


# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /payment
@user_private_router.message(F.text.lower() == '–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã')
@user_private_router.message(Command('payment'))
async def menu_cmd(message: types.Message):
    # —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ –≤–∏–¥–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, —Å–Ω–∞—á–∞–ª–∞ –∏–¥—ë—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫
    text = as_marked_section(
        Bold('–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:'),
        '–ö–∞—Ä—Ç–æ–π –≤ –±–æ—Ç–µ',
        '–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ (–∫–∞—Ä—Ç–∞ / –Ω–∞–ª–∏—á–Ω—ã–µ)',
        marker='‚úÖ '
    )
    # as_html() - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞—à –æ—Ç–≤–µ—Ç, –∫–∞–∫ html —Ç–µ–∫—Å—Ç
    await message.answer(text.as_html())


# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /delivery
# F - –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (—É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ, –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)
@user_private_router.message((F.text.lower().contains('–¥–æ—Å—Ç–∞–≤–∫')) | (F.text.lower() == '–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'))
@user_private_router.message(Command('delivery'))
async def menu_cmd(message: types.Message):
    # —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ –≤–∏–¥–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤, —Å–Ω–∞—á–∞–ª–∞ –∏–¥—ë—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫
    text = as_list(
        as_marked_section(
            Bold('–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:'),
            '–ö—É—Ä—å–µ—Ä',
            '–°–∞–º–æ–≤—ã–≤–æ–∑ (—Å–µ–π—á–∞—Å –ø—Ä–∏–µ–¥—É, –∑–∞–±–µ—Ä—É)',
            '–ü–æ–∫—É—à–∞—é —É –í–∞—Å',
            marker='‚úÖ '
        ),
        as_marked_section(
            Bold('–ù–µ–ª—å–∑—è:'),
            '–ü–æ—á—Ç–∞',
            '–ì–æ–ª—É–±–∏',
            marker='‚ùå '
        ),
        # —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å–µ–∫—Ü–∏–π
        sep='\n----------------------\n'
    )
    # as_html() - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞—à –æ—Ç–≤–µ—Ç, –∫–∞–∫ html —Ç–µ–∫—Å—Ç
    await message.answer(text.as_html())
