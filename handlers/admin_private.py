# –∞–¥–º–∏–Ω–∫–∞

from aiogram import F, Router, types
from aiogram.filters import Command, StateFilter, or_f
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
# –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Å—Å–∏—è–º–∏
from sqlalchemy.ext.asyncio import AsyncSession

# –Ω–∞—à–∏ –∏–º–ø–æ—Ä—Ç—ã
from filters.chat_types import ChatTypeFilter, IsAdmin
# –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ–±—ã—á–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from kbds.reply import get_keyboard
# –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from kbds.inline import get_callback_btns
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ë–î
from database.orm_query import (
    orm_change_banner_image,
    orm_get_categories,
    orm_add_product,
    orm_delete_product,
    orm_get_info_pages,
    orm_get_product,
    orm_get_products,
    orm_update_product,
)

# —Å–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
admin_router = Router()
# –ø–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –≥–¥–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ä–æ—É—Ç–µ—Ä (–≤ –ª–∏—á–∫–µ, –≤ –≥—Ä—É–ø–ø–µ, —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ), –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
# —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
admin_router.message.filter(ChatTypeFilter(["private"]), IsAdmin())

# —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
ADMIN_KB = get_keyboard(
    "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
    "–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç",
    "–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–Ω–Ω–µ—Ä",
    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    sizes=(2,),
)

# —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
BACK_KB = get_keyboard(
    "–ù–∞–∑–∞–¥",
    "–û—Ç–º–µ–Ω–∞",
    placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
    sizes=(1, 1),
)


# –ø—Ä–∏ –Ω–æ–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞, –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ c –∞–¥–º–∏–Ω–∞–º–∏ –∫–æ–º–∞–Ω–¥—É /admin, —á—Ç–æ–±—ã –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ
@admin_router.message(Command("admin"))
async def add_product(message: types.Message):
    await message.answer("–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å ‚ùì", reply_markup=ADMIN_KB)


@admin_router.message(F.text == '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç')
async def admin_features(message: types.Message, session: AsyncSession):
    categories = await orm_get_categories(session)
    btns = {category.name: f'category_{category.id}' for category in categories}
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=get_callback_btns(btns=btns))


@admin_router.callback_query(F.data.startswith('category_'))
async def starring_at_product(callback: types.CallbackQuery, session: AsyncSession):
    category_id = callback.data.split('_')[-1]
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    products = await orm_get_products(session, int(category_id))
    if not products:
        await callback.answer()
        await callback.message.answer("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç üö´")
        return
    for product in products:
        unit = "–ª" if product.category.name == "–ù–∞–ø–∏—Ç–∫–∏" else "–≥—Ä"
        await callback.message.answer_photo(
            product.image,
            caption=f"<strong>{product.name}\
                                </strong>\n{product.description}\n–í–µ—Å: {product.weight} {unit}\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {round(product.price, 2)} ‚ÇΩ",
            reply_markup=get_callback_btns(
                btns={
                    "–£–¥–∞–ª–∏—Ç—å": f"delete_{product.id}",
                    "–ò–∑–º–µ–Ω–∏—Ç—å": f"change_{product.id}",
                },
                sizes=(2,)
            ),
        )
    await callback.answer()
    await callback.message.answer("‚ù§Ô∏è –û–ö, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ ‚è´")


# –∏–Ω–ª–∞–π–Ω —É–¥–∞–ª–µ–Ω–∏–µ
# –ª–æ–≤–∏–º —Ç–µ–∫—Å—Ç –∏–∑ callback_query, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ delete_
@admin_router.callback_query(F.data.startswith('delete_'))
# callback - –Ω–∞—à–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
async def delete_product(callback: types.CallbackQuery, session: AsyncSession):
    # —É–¥–∞–ª—è–µ–º delete_, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ id –ø—Ä–æ–¥—É–∫—Ç–∞
    product_id = callback.data.split("_")[-1]
    await orm_delete_product(session, int(product_id))

    # –¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É —Ç–µ–ª–µ–≥—Ä–∞–º–º –ø–æ–Ω—è—Ç—å, —á—Ç–æ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–∏—Ç—å
    await callback.answer("‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω")
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
    await callback.message.answer("‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω!")


################# –ú–∏–∫—Ä–æ FSM –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏/–∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–æ–≤ ############################

class AddBanner(StatesGroup):
    image = State()


# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—á–µ–Ω—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –±–æ—Ç–∞ –∏ —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ photo
@admin_router.message(StateFilter(None), F.text == '–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–Ω–Ω–µ—Ä')
async def add_image2(message: types.Message, state: FSMContext, session: AsyncSession):
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ
    page_translation = {
        "–≥–ª–∞–≤–Ω–∞—è": "main",
        "–æ –Ω–∞—Å": "about",
        "–æ–ø–ª–∞—Ç–∞": "payment",
        "–¥–æ—Å—Ç–∞–≤–∫–∞": "shipping",
        "–∫–∞—Ç–∞–ª–æ–≥": "catalog",
        "–∫–æ—Ä–∑–∏–Ω–∞": "cart"
    }
    # –°–ø–∏—Å–æ–∫ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
    pages_names_russian = list(page_translation.keys())

    pages_names = [page.name for page in await orm_get_info_pages(session)]
    await message.answer(f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–∞–Ω–Ω–µ—Ä–∞.\n‚ùó –í –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –¥–ª—è –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:\
                         \n{', '.join(pages_names_russian)}")
    await state.set_state(AddBanner.image)


# –î–æ–±–∞–≤–ª—è–µ–º/–∏–∑–º–µ–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ (—Ç–∞–º —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ –∏–º–µ–Ω–∞–º:
# main, catalog, cart(–¥–ª—è –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω—ã), about, payment, shipping
@admin_router.message(AddBanner.image, F.photo)
async def add_banner(message: types.Message, state: FSMContext, session: AsyncSession):
    image_id = message.photo[-1].file_id
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ
    page_translation = {
        "–≥–ª–∞–≤–Ω–∞—è": "main",
        "–æ –Ω–∞—Å": "about",
        "–æ–ø–ª–∞—Ç–∞": "payment",
        "–¥–æ—Å—Ç–∞–≤–∫–∞": "shipping",
        "–∫–∞—Ç–∞–ª–æ–≥": "catalog",
        "–∫–æ—Ä–∑–∏–Ω–∞": "cart"
    }
    # –°–ø–∏—Å–æ–∫ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
    pages_names_russian = list(page_translation.keys())

    # –ø–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    for_page = message.caption.strip().lower()
    # –ø–µ—Ä–µ–≤–æ–¥–∏–º —Ä—É—Å—Å–∫—É—é –ø–æ–¥–ø–∏—Å—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫—É—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –±–∞–Ω–Ω–µ—Ä–æ–≤
    translated_page = page_translation.get(for_page, None)

    pages_names = [page.name for page in await orm_get_info_pages(session)]
    if translated_page not in pages_names:
        await message.answer(f"‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:\
                         \n{', '.join(pages_names_russian)}")
        return
    await orm_change_banner_image(session, translated_page, image_id, )
    await message.answer("‚úÖ –ë–∞–Ω–Ω–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω/–∏–∑–º–µ–Ω–µ–Ω!")
    await state.clear()


# –ª–æ–≤–∏–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
@admin_router.message(AddBanner.image)
async def add_banner2(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–∞–Ω–Ω–µ—Ä–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ/–Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–º–µ–Ω–∞")


#########################################################################################


######################### FSM –¥–ª—è –¥–∞–±–∞–≤–ª–µ–Ω–∏—è/–∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∞–¥–º–∏–Ω–æ–º ##################
# –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
class AddProduct(StatesGroup):
    # –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º —à–∞–≥–∏ (—Å–æ—Å—Ç–æ—è–Ω–∏—è, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∞–¥–º–∏–Ω)
    # 1 —à–∞–≥(—Å–æ—Å—Ç–æ—è–Ω–∏–µ) - –≤–≤–æ–¥ –∏–º–µ–Ω–∏
    name = State()
    # 2 —à–∞–≥ - –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è
    description = State()
    # 3 —à–∞–≥ - –≤–≤–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category = State()
    # 4 —à–∞–≥ - –≤–≤–æ–¥ –≤–µ—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
    weight = State()
    # 5 —à–∞–≥ - –≤–≤–æ–¥ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    price = State()
    # 6 —à–∞–≥ - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
    image = State()

    # –ø—Ä–æ–¥—É–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
    product_for_change = None

    # —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º, —á—Ç–æ –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –Ω–∞–∑–∞–¥
    texts = {
        'AddProduct:name': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ! ‚è¨\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ',
        'AddProduct:description': '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ! ‚è¨\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
        "AddProduct:category": "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é  –∑–∞–Ω–æ–≤–æ! ‚è¨\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        'AddProduct:weight': '–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å/–æ–±—ä—ë–º –∑–∞–Ω–æ–≤–æ! ‚è¨\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–π –≤–µ—Å/–æ–±—ä—ë–º —Ç–æ–≤–∞—Ä–∞',
        'AddProduct:price': '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–Ω–æ–≤–æ! ‚è¨\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å',
        'AddProduct:image': '–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥..',
    }


# –∏–Ω–ª–∞–π–Ω –∏–∑–º–µ–Ω–µ–Ω–∏–µ
# –ª–æ–≤–∏–º —Ç–µ–∫—Å—Ç –∏–∑ callback_query, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ change_ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
# —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ name
@admin_router.callback_query(StateFilter(None), F.data.startswith('change_'))
# callback - –Ω–∞—à–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
async def change_product(callback: types.CallbackQuery, state: FSMContext, session: AsyncSession):
    # —É–¥–∞–ª—è–µ–º change_, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ id –ø—Ä–æ–¥—É–∫—Ç–∞
    product_id = callback.data.split("_")[-1]
    # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç –∏–∑ –ë–î
    product_for_change = await orm_get_product(session, int(product_id))

    AddProduct.product_for_change = product_for_change

    # –¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É —Ç–µ–ª–µ–≥—Ä–∞–º–º –ø–æ–Ω—è—Ç—å, —á—Ç–æ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–∏—Ç—å
    await callback.answer()
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await callback.message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
        reply_markup=BACK_KB)
    # –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ (–¥–∞–ª–µ–µ –º—ã –ø—Ä–æ–π–¥—ë–º –≤—Å–µ —ç—Ç–∞–ø—ã, –∫–∞–∫ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏)
    await state.set_state(AddProduct.name)


# –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π - StateFilter(None)
@admin_router.message(StateFilter(None), F.text == "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")
# –ø–µ—Ä–µ–¥–∞–µ–º FSMContext, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def add_product(message: types.Message, state: FSMContext):
    await message.answer(
        # –∂–¥—ë–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∞–¥–º–∏–Ω–∞, —É–¥–∞–ª—è–µ–º –∞–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
        reply_markup=BACK_KB
    )
    # —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è (–Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞)
    await state.set_state(AddProduct.name)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å,
# –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–º–µ—Ä 1 (—ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞—è –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
# –¥–æ–±–∞–≤–ª—è–µ–º StateFilter('*'), –≥–¥–µ '*' - –ª—é–±–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@admin_router.message(StateFilter('*'), Command("–æ—Ç–º–µ–Ω–∞"))
@admin_router.message(StateFilter('*'), F.text.casefold() == "–æ—Ç–º–µ–Ω–∞")
async def cancel_handler(message: types.Message, state: FSMContext) -> None:
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    current_state = await state.get_state()
    # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —ç—Ç–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    if current_state is None:
        return
    # –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –∏–∑–º–µ–Ω—è–ª—Å—è, –∞ –ø–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –æ—Ç–º–µ–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ product_for_change
    if AddProduct.product_for_change:
        AddProduct.product_for_change = None
    # –∏–Ω–∞—á–µ –æ—á–∏—â–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.clear()
    # –ø–∏—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await message.answer("‚úÖ –î–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã", reply_markup=ADMIN_KB)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥ (–Ω–∞ –ø—Ä–æ—à–ª–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
@admin_router.message(StateFilter('*'), Command("–Ω–∞–∑–∞–¥"))
@admin_router.message(StateFilter('*'), F.text.casefold() == "–Ω–∞–∑–∞–¥")
async def cancel_handler(message: types.Message, state: FSMContext) -> None:
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    current_state = await state.get_state()
    # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
    if current_state == AddProduct.name:
        await message.answer(
            'üö´ –ü—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ –Ω–µ—Ç!\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ/–Ω–∞–ø–∏—à–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞')
        # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        return

    # —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    previous = None
    # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–º –Ω–∞—à–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏—è–º –≤ AddProduct
    for step in AddProduct.__all_states__:
        # –µ—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ = —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        if step.state == current_state:
            # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            await state.set_state(previous)
            await message.answer(f'üëå, –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É.\n{AddProduct.texts[previous.state]}')
            return
        # –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è, –ø–æ–∫–∞ –Ω–µ –ø–æ–ø–∞–¥—ë—Ç –≤ —É—Å–ª–æ–≤–∏–µ, –∞ –∫–æ–≥–¥–∞ –ø–æ–ø–∞–¥–µ—Ç, —Ç–æ —Å—Ç–∞–Ω–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        # –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ—Å—Ç–æ—è–Ω–∏–µ description –Ω–µ –ø—Ä–æ—à—ë–ª –≤ —É—Å–ª–æ–≤–∏–µ, –Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ price - –ø—Ä–æ—à–ª–æ, –∑–Ω–∞—á–∏—Ç
        # –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ description
        previous = step


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞, —Ç–æ
# –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∂–¥—ë–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
@admin_router.message(AddProduct.name, F.text)
async def add_name(message: types.Message, state: FSMContext):
    # –µ—Å–ª–∏ —Ç–æ—á–∫–∞, —Ç–æ –±–µ—Ä—ë–º —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å
    if message.text == "." and AddProduct.product_for_change:
        await state.update_data(name=AddProduct.product_for_change.name)
    else:
        # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –±–æ–ª—å—à–µ, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–µ –º–µ–Ω—è—è —Å–æ—Å—Ç–æ—è–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if len(message.text) > 150 or len(message.text) <= 2:
            await message.answer(
                "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 150 —Å–∏–º–≤–æ–ª–æ–≤\n–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤!\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ! ‚è¨"
            )
            return
        # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ) –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await state.update_data(name=message.text)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n‚ùó –û–¢–ü–†–ê–í–¨–¢–ï –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫, –µ—Å–ª–∏:\n1Ô∏è‚É£ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ü–£–°–¢–´–ú\n‚óè –û–¢–ü–†–ê–í–¨–¢–ï —Ç–æ—á–∫—É, –µ—Å–ª–∏:\n2Ô∏è‚É£ –í—ã –ò–ó–ú–ï–ù–Ø–ï–¢–ï —Ç–æ–≤–∞—Ä –∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –°–¢–ê–†–û–ï –æ–ø–∏—Å–∞–Ω–∏–µ")
    # —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è (–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞)
    await state.set_state(AddProduct.description)


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Ç–æ, —á—Ç–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä F.text), –ø–∏—à–µ–º –æ–± –æ—à–∏–±–∫–µ –¥–∞–Ω–Ω—ã—Ö
@admin_router.message(AddProduct.name)
async def add_name2(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞!")


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞, —Ç–æ
# –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∂–¥—ë–º –≤–µ—Å/–æ–±—ä—ë–º —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
@admin_router.message(AddProduct.description, F.text)
async def add_description(message: types.Message, state: FSMContext, session: AsyncSession):
    # –µ—Å–ª–∏ —Ç–æ—á–∫–∞, —Ç–æ –±–µ—Ä—ë–º —Å—Ç–∞—Ä–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å
    if message.text == "." and AddProduct.product_for_change:
        await state.update_data(description=AddProduct.product_for_change.description)
    elif message.text == "!":
        await state.update_data(description="")
    else:
        if len(message.text) > 300:
            await message.answer(
                "‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!\n –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 300 —Å–∏–º–≤–æ–ª–æ–≤.\n–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ! ‚è¨"
            )
            return
        # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ (–æ–ø–∏—Å–∞–Ω–∏–µ) –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await state.update_data(description=message.text)

    # –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = await orm_get_categories(session)
    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–º—è: id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    btns = {category.name: str(category.id) for category in categories}
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=get_callback_btns(btns=btns))
    await state.set_state(AddProduct.category)


@admin_router.message(AddProduct.description)
async def add_description2(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞!")


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞, —Ç–æ
# –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –∂–¥—ë–º –≤–µ—Å/–æ–±—ä—ë–º —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
@admin_router.callback_query(AddProduct.category)
async def category_choice(callback: types.CallbackQuery, state: FSMContext, session: AsyncSession):
    # –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    if int(callback.data) in [category.id for category in await orm_get_categories(session)]:
        await callback.answer()
        await state.update_data(category=callback.data)
        await callback.message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å/–æ–±—ä—ë–º —Ç–æ–≤–∞—Ä–∞\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–π –≤–µ—Å/–æ–±—ä—ë–º —Ç–æ–≤–∞—Ä–∞")
        # —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è (–≤–µ—Å–∞ —Ç–æ–≤–∞—Ä–∞)
        await state.set_state(AddProduct.weight)
    else:
        await callback.message.answer('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –∫–Ω–æ–ø–æ–∫.')
        await callback.answer()


# –õ–æ–≤–∏–º –ª—é–±—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∫—Ä–æ–º–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@admin_router.message(AddProduct.category)
async def category_choice2(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –∫–Ω–æ–ø–æ–∫!")


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ –≤–µ—Å–∞ —Ç–æ–≤–∞—Ä–∞, —Ç–æ
# –¥–æ–±–∞–≤–ª—è–µ–º –≤–µ—Å/–æ–±—ä—ë–º –∏ –∂–¥—ë–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
@admin_router.message(AddProduct.weight, F.text)
async def add_weight(message: types.Message, state: FSMContext):
    # –µ—Å–ª–∏ —Ç–æ—á–∫–∞, —Ç–æ –±–µ—Ä—ë–º —Å—Ç–∞—Ä—ã–π –≤–µ—Å/–æ–±—ä—ë–º —É –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å
    if message.text == "." and AddProduct.product_for_change:
        await state.update_data(weight=AddProduct.product_for_change.weight)
    else:
        if len(message.text) >= 5 or len(message.text) == 0:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–µ—Å–∞!\n –í–µ—Å/–æ–±—ä—ë–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 4 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –Ω–µ —Ä–∞–≤–µ–Ω 0\n–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å/–æ–±—ä—ë–º –∑–∞–Ω–æ–≤–æ –≤ –≥—Ä–∞–º–º–∞—Ö/–ª–∏—Ç—Ä–∞—Ö! ‚è¨"
            )
            return
        try:
            abs(float(message.text))
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–µ—Å–∞ —Ç–æ–≤–∞—Ä–∞!")
            return
        # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ (—Å—Ç–æ–∏–º–æ—Å—Ç—å) –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await state.update_data(weight=message.text)

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å")
    # —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è (—Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞)
    await state.set_state(AddProduct.price)


@admin_router.message(AddProduct.weight)
async def add_weight2(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Å/–æ–±—ä—ë–º —Ç–æ–≤–∞—Ä–∞ –≤ –≥—Ä–∞–º–º–∞—Ö/–ª–∏—Ç—Ä–∞—Ö!")


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤–≤–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞, —Ç–æ
# –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –∂–¥—ë–º —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
@admin_router.message(AddProduct.price, F.text)
async def add_price(message: types.Message, state: FSMContext):
    # –µ—Å–ª–∏ —Ç–æ—á–∫–∞, —Ç–æ –±–µ—Ä—ë–º —Å—Ç–∞—Ä—É—é —Ü–µ–Ω—É —É –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å
    if message.text == "." and AddProduct.product_for_change:
        await state.update_data(price=AddProduct.product_for_change.price)
    else:
        if len(message.text) >= 5 or len(message.text) == 0:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã!\n –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 4 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –Ω–µ —Ä–∞–≤–Ω–∞ 0\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞–Ω–æ–≤–æ! ‚è¨"
            )
            return
        try:
            abs(float(message.text))
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã!")
            return
        # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ (—Å—Ç–æ–∏–º–æ—Å—Ç—å) –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await state.update_data(price=message.text)

    await message.answer(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n‚ùó –ï—Å–ª–∏ –í—ã –∏–∑–º–µ–Ω—è–µ—Ç–µ —Ç–æ–≤–∞—Ä, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Ñ–æ—Ç–æ")
    # —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è (—Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞)
    await state.set_state(AddProduct.image)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ª–æ–≤–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è price
@admin_router.message(AddProduct.price)
async def add_price2(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞!")


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞, —Ç–æ
# –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@admin_router.message(AddProduct.image, or_f(F.photo, F.text == "."))
async def add_image(message: types.Message, state: FSMContext, session: AsyncSession):
    # –µ—Å–ª–∏ —Ç–æ—á–∫–∞, —Ç–æ –±–µ—Ä—ë–º —Å—Ç–∞—Ä–æ–µ —Ñ–æ—Ç–æ —É –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å
    if message.text and message.text == "." and AddProduct.product_for_change:
        await state.update_data(image=AddProduct.product_for_change.image)
    elif message.photo:
        # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ (—Ñ–æ—Ç–æ) –∏–∑ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # photo[-1] - —ç—Ç–æ –Ω–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º, file_id - –ø–æ–ª—É—á–∞–µ–º id —Ñ–æ—Ç–æ
        await state.update_data(image=message.photo[-1].file_id)
    else:
        await message.answer("‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞!")
        return

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ –æ—Ç –∞–¥–º–∏–Ω–∞ (—Å–ª–æ–≤–∞—Ä—å)
    data = await state.get_data()
    try:
        # –µ—Å–ª–∏ –º—ã –∏–∑–º–µ–Ω—è–µ–º –ø—Ä–æ–¥—É–∫—Ç, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å update
        if AddProduct.product_for_change:
            await orm_update_product(session, AddProduct.product_for_change.id, data)
        # –∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç
        else:
            await orm_add_product(session, data)
        await message.answer("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω/–∏–∑–º–µ–Ω–µ–Ω!", reply_markup=ADMIN_KB)
        # –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à—ë–ª –≤—Å–µ –ø—É–Ω–∫—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –æ—á–∏—â–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await state.clear()
    except Exception as e:
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞: \n{str(e)}\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!", reply_markup=ADMIN_KB
        )
        await state.clear()
    # –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ–º–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞, –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
    AddProduct.product_for_change = None


@admin_router.message(AddProduct.image)
async def add_image(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞!")
